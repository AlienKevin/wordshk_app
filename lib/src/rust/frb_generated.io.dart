// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.6.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

import 'api/api.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  RustStreamSink<String> dco_decode_StreamSink_String_Sse(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  CombinedSearchResults dco_decode_combined_search_results(dynamic raw);

  @protected
  EgSearchResult dco_decode_eg_search_result(dynamic raw);

  @protected
  EnglishSearchResult dco_decode_english_search_result(dynamic raw);

  @protected
  EntryDef dco_decode_entry_def(dynamic raw);

  @protected
  EntrySummary dco_decode_entry_summary(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<EgSearchResult> dco_decode_list_eg_search_result(dynamic raw);

  @protected
  List<EnglishSearchResult> dco_decode_list_english_search_result(dynamic raw);

  @protected
  List<EntryDef> dco_decode_list_entry_def(dynamic raw);

  @protected
  List<EntrySummary> dco_decode_list_entry_summary(dynamic raw);

  @protected
  List<MatchedSegment> dco_decode_list_matched_segment(dynamic raw);

  @protected
  List<PrSearchResult> dco_decode_list_pr_search_result(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_32_loose(dynamic raw);

  @protected
  Uint32List dco_decode_list_prim_u_32_strict(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw);

  @protected
  List<VariantSearchResult> dco_decode_list_variant_search_result(dynamic raw);

  @protected
  MatchedInfix dco_decode_matched_infix(dynamic raw);

  @protected
  MatchedSegment dco_decode_matched_segment(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  PrSearchResult dco_decode_pr_search_result(dynamic raw);

  @protected
  (int?, List<EnglishSearchResult>)
      dco_decode_record_opt_box_autoadd_u_32_list_english_search_result(
          dynamic raw);

  @protected
  (int?, List<PrSearchResult>)
      dco_decode_record_opt_box_autoadd_u_32_list_pr_search_result(dynamic raw);

  @protected
  (int?, List<VariantSearchResult>)
      dco_decode_record_opt_box_autoadd_u_32_list_variant_search_result(
          dynamic raw);

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw);

  @protected
  Romanization dco_decode_romanization(dynamic raw);

  @protected
  Script dco_decode_script(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  VariantSearchResult dco_decode_variant_search_result(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  RustStreamSink<String> sse_decode_StreamSink_String_Sse(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  CombinedSearchResults sse_decode_combined_search_results(
      SseDeserializer deserializer);

  @protected
  EgSearchResult sse_decode_eg_search_result(SseDeserializer deserializer);

  @protected
  EnglishSearchResult sse_decode_english_search_result(
      SseDeserializer deserializer);

  @protected
  EntryDef sse_decode_entry_def(SseDeserializer deserializer);

  @protected
  EntrySummary sse_decode_entry_summary(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<EgSearchResult> sse_decode_list_eg_search_result(
      SseDeserializer deserializer);

  @protected
  List<EnglishSearchResult> sse_decode_list_english_search_result(
      SseDeserializer deserializer);

  @protected
  List<EntryDef> sse_decode_list_entry_def(SseDeserializer deserializer);

  @protected
  List<EntrySummary> sse_decode_list_entry_summary(
      SseDeserializer deserializer);

  @protected
  List<MatchedSegment> sse_decode_list_matched_segment(
      SseDeserializer deserializer);

  @protected
  List<PrSearchResult> sse_decode_list_pr_search_result(
      SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_32_loose(SseDeserializer deserializer);

  @protected
  Uint32List sse_decode_list_prim_u_32_strict(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<(String, String)> sse_decode_list_record_string_string(
      SseDeserializer deserializer);

  @protected
  List<VariantSearchResult> sse_decode_list_variant_search_result(
      SseDeserializer deserializer);

  @protected
  MatchedInfix sse_decode_matched_infix(SseDeserializer deserializer);

  @protected
  MatchedSegment sse_decode_matched_segment(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  PrSearchResult sse_decode_pr_search_result(SseDeserializer deserializer);

  @protected
  (int?, List<EnglishSearchResult>)
      sse_decode_record_opt_box_autoadd_u_32_list_english_search_result(
          SseDeserializer deserializer);

  @protected
  (int?, List<PrSearchResult>)
      sse_decode_record_opt_box_autoadd_u_32_list_pr_search_result(
          SseDeserializer deserializer);

  @protected
  (int?, List<VariantSearchResult>)
      sse_decode_record_opt_box_autoadd_u_32_list_variant_search_result(
          SseDeserializer deserializer);

  @protected
  (String, String) sse_decode_record_string_string(
      SseDeserializer deserializer);

  @protected
  Romanization sse_decode_romanization(SseDeserializer deserializer);

  @protected
  Script sse_decode_script(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  VariantSearchResult sse_decode_variant_search_result(
      SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_String_Sse(
      RustStreamSink<String> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_combined_search_results(
      CombinedSearchResults self, SseSerializer serializer);

  @protected
  void sse_encode_eg_search_result(
      EgSearchResult self, SseSerializer serializer);

  @protected
  void sse_encode_english_search_result(
      EnglishSearchResult self, SseSerializer serializer);

  @protected
  void sse_encode_entry_def(EntryDef self, SseSerializer serializer);

  @protected
  void sse_encode_entry_summary(EntrySummary self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_eg_search_result(
      List<EgSearchResult> self, SseSerializer serializer);

  @protected
  void sse_encode_list_english_search_result(
      List<EnglishSearchResult> self, SseSerializer serializer);

  @protected
  void sse_encode_list_entry_def(List<EntryDef> self, SseSerializer serializer);

  @protected
  void sse_encode_list_entry_summary(
      List<EntrySummary> self, SseSerializer serializer);

  @protected
  void sse_encode_list_matched_segment(
      List<MatchedSegment> self, SseSerializer serializer);

  @protected
  void sse_encode_list_pr_search_result(
      List<PrSearchResult> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_loose(
      List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_strict(
      Uint32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_string(
      List<(String, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_variant_search_result(
      List<VariantSearchResult> self, SseSerializer serializer);

  @protected
  void sse_encode_matched_infix(MatchedInfix self, SseSerializer serializer);

  @protected
  void sse_encode_matched_segment(
      MatchedSegment self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_pr_search_result(
      PrSearchResult self, SseSerializer serializer);

  @protected
  void sse_encode_record_opt_box_autoadd_u_32_list_english_search_result(
      (int?, List<EnglishSearchResult>) self, SseSerializer serializer);

  @protected
  void sse_encode_record_opt_box_autoadd_u_32_list_pr_search_result(
      (int?, List<PrSearchResult>) self, SseSerializer serializer);

  @protected
  void sse_encode_record_opt_box_autoadd_u_32_list_variant_search_result(
      (int?, List<VariantSearchResult>) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_string(
      (String, String) self, SseSerializer serializer);

  @protected
  void sse_encode_romanization(Romanization self, SseSerializer serializer);

  @protected
  void sse_encode_script(Script self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_variant_search_result(
      VariantSearchResult self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;
}
